name: üöÄ One-Click Deploy

on:
  workflow_dispatch:
    inputs:
      branch_filter:
        description: 'Branch to filter artifacts (default: develop)'
        required: false
        default: 'develop'
        type: string
      force_migration:
        description: 'Force run migration regardless of detection'
        required: false
        default: false
        type: boolean

jobs:
  auto-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 20  # Get recent commits for DB change detection

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Auto-detect Latest Artifact
        id: artifact
        run: |
          BRANCH_FILTER="${{ inputs.branch_filter || 'develop' }}"
          echo "üîç Looking for latest artifact from branch: $BRANCH_FILTER"
          
          # Get latest artifact from S3 matching the branch pattern
          LATEST_ARTIFACT=$(aws s3 ls s3://bos-artifacts/backend/ --recursive | \
            grep "bos-backend-${BRANCH_FILTER}-" | \
            sort -k1,2 | \
            tail -n 1 | \
            awk '{print $4}' | \
            sed 's|backend/bos-backend-||' | \
            sed 's|\.jar$||')
          
          if [ -z "$LATEST_ARTIFACT" ]; then
            echo "‚ùå No artifacts found for branch: $BRANCH_FILTER"
            echo "Available artifacts:"
            aws s3 ls s3://bos-artifacts/backend/ | head -10
            exit 1
          fi
          
          echo "‚úÖ Found latest artifact: $LATEST_ARTIFACT"
          echo "ARTIFACT_VERSION=$LATEST_ARTIFACT" >> $GITHUB_OUTPUT
          
          # Verify artifact exists
          if aws s3 ls "s3://bos-artifacts/backend/bos-backend-${LATEST_ARTIFACT}.jar" >/dev/null 2>&1; then
            echo "‚úÖ Artifact verified in S3"
          else
            echo "‚ùå Artifact not found in S3"
            exit 1
          fi

      - name: Auto-detect Database Changes
        id: db_changes
        run: |
          echo "üîç Checking for database changes in recent commits..."
          
          # Check last 10 commits for migration file changes
          DB_CHANGED=false
          COMMITS_TO_CHECK=10
          
          for i in $(seq 0 $((COMMITS_TO_CHECK-1))); do
            COMMIT_SHA=$(git rev-parse HEAD~$i)
            echo "Checking commit: $COMMIT_SHA"
            
            if git diff --name-only HEAD~$((i+1)) HEAD~$i 2>/dev/null | grep -q "src/main/resources/db/migration/"; then
              DB_CHANGED=true
              echo "üîÑ Database migration files changed in commit: $COMMIT_SHA"
              git diff --name-only HEAD~$((i+1)) HEAD~$i | grep "src/main/resources/db/migration/" || true
              break
            fi
          done
          
          # Override with manual force flag
          if [[ "${{ inputs.force_migration }}" == "true" ]]; then
            DB_CHANGED=true
            echo "üîÑ Migration forced by user input"
          fi
          
          echo "DB_CHANGED=$DB_CHANGED" >> $GITHUB_OUTPUT
          
          if [[ "$DB_CHANGED" == "true" ]]; then
            echo "‚úÖ Database migration will be executed"
          else
            echo "‚úÖ No database migration needed"
          fi

      - name: Display Deployment Plan
        run: |
          echo "## üöÄ Deployment Plan"
          echo "- **Artifact Version**: ${{ steps.artifact.outputs.ARTIFACT_VERSION }}"
          echo "- **Run Migration**: ${{ steps.db_changes.outputs.DB_CHANGED }}"
          echo "- **Branch Filter**: ${{ inputs.branch_filter || 'develop' }}"
          echo "- **Force Migration**: ${{ inputs.force_migration }}"
          echo ""
          echo "Proceeding with automatic deployment in 5 seconds..."
          sleep 5

      - name: Trigger Deploy Workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üöÄ Triggering deployment workflow..."
          
          curl -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${{ github.api_url }}/repos/${{ github.repository }}/dispatches" \
            -d "{
              \"event_type\": \"deploy-ready\",
              \"client_payload\": {
                \"artifact_version\": \"${{ steps.artifact.outputs.ARTIFACT_VERSION }}\",
                \"branch\": \"${{ inputs.branch_filter || 'develop' }}\",
                \"commit\": \"${{ github.sha }}\",
                \"db_changed\": \"${{ steps.db_changes.outputs.DB_CHANGED }}\",
                \"triggered_by\": \"quick-deploy\",
                \"actor\": \"${{ github.actor }}\"
              }
            }"

      - name: Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          DB_STATUS_EMOJI="‚úÖ"
          DB_STATUS_TEXT="No migration needed"
          
          if [[ "${{ steps.db_changes.outputs.DB_CHANGED }}" == "true" ]]; then
            DB_STATUS_EMOJI="üîÑ"
            DB_STATUS_TEXT="Migration will be executed"
          fi
          
          curl -H "Content-Type: application/json" \
          -d "{
            \"embeds\": [{
              \"title\": \"üöÄ One-Click Deploy Triggered\",
              \"color\": 3066993,
              \"fields\": [
                {\"name\": \"Version\", \"value\": \"${{ steps.artifact.outputs.ARTIFACT_VERSION }}\", \"inline\": true},
                {\"name\": \"Branch\", \"value\": \"${{ inputs.branch_filter || 'develop' }}\", \"inline\": true},
                {\"name\": \"Migration\", \"value\": \"${DB_STATUS_EMOJI} ${DB_STATUS_TEXT}\", \"inline\": true},
                {\"name\": \"Triggered by\", \"value\": \"${{ github.actor }}\", \"inline\": true},
                {\"name\": \"Status\", \"value\": \"‚è≥ Deployment in progress...\", \"inline\": false}
              ],
              \"footer\": {\"text\": \"Auto-deployment initiated\"},
              \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
            }]
          }" \
          $DISCORD_WEBHOOK

      - name: Monitor Deployment
        run: |
          echo "‚úÖ Deployment workflow triggered successfully!"
          echo "üìä Monitor deployment progress at:"
          echo "${{ github.server_url }}/${{ github.repository }}/actions"