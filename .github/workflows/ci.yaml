name: Continuous Integration

on:
  push:
    branches:
      - develop
      - master
      - ci-test
  release:
    types:
      - created

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "21"

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get version string
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/\//-/g')
            SHORT_SHA=$(git rev-parse --short=8 HEAD)
            VERSION="${SAFE_BRANCH_NAME}-${SHORT_SHA}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Detect Database Changes
        id: db_changes
        run: |
          # Check for changes in migration files
          DB_CHANGED=false
          if git diff --name-only HEAD~1 HEAD | grep -q "src/main/resources/db/migration/"; then
            DB_CHANGED=true
            echo "🔍 Database migration files changed"
            git diff --name-only HEAD~1 HEAD | grep "src/main/resources/db/migration/" || true
          fi
          echo "DB_CHANGED=$DB_CHANGED" >> $GITHUB_OUTPUT

          # Get migration file list for deployment
          MIGRATION_FILES=$(find src/main/resources/db/migration -name "*.sql" -type f | sort | tr '\n' ',' | sed 's/,$//')
          echo "MIGRATION_FILES=$MIGRATION_FILES" >> $GITHUB_OUTPUT

      - name: Run Tests
        run: ./gradlew test

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Rename JAR
        run: |
          JAR_FILE=$(find build/libs -type f -name "*.jar" ! -name "*-plain.jar" | head -n 1)
          mv "$JAR_FILE" "build/libs/bos-backend-${{ steps.version.outputs.VERSION }}.jar"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp build/libs/bos-backend-${{ steps.version.outputs.VERSION }}.jar \
          s3://bos-artifacts/backend/bos-backend-${{ steps.version.outputs.VERSION }}.jar

      - name: Upload GitHub Artifact (Backup)
        uses: actions/upload-artifact@v4
        with:
          name: bos-backend-${{ steps.version.outputs.VERSION }}
          path: build/libs/bos-backend-${{ steps.version.outputs.VERSION }}.jar
          retention-days: 30

      - name: Discord Notification with Deploy Buttons
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ARTIFACT_URL="s3://bos-artifacts/backend/bos-backend-${{ steps.version.outputs.VERSION }}.jar"
          DB_STATUS_EMOJI=""
          DB_STATUS_TEXT="No DB changes"

          if [[ "${{ steps.db_changes.outputs.DB_CHANGED }}" == "true" ]]; then
            DB_STATUS_EMOJI="🔄"
            DB_STATUS_TEXT="DB migrations required"
          else
            DB_STATUS_EMOJI="✅"
            DB_STATUS_TEXT="No DB changes"
          fi

          # Send Discord notification with deployment trigger buttons
          MESSAGE_ID=$(curl -s -H "Content-Type: application/json" \
          -d "{
            \"embeds\": [{
              \"title\": \"🚀 CI Build Completed\",
              \"color\": 3066993,
              \"fields\": [
                {\"name\": \"Branch\", \"value\": \"${{ github.ref_name }}\", \"inline\": true},
                {\"name\": \"Version\", \"value\": \"${{ steps.version.outputs.VERSION }}\", \"inline\": true},
                {\"name\": \"Commit\", \"value\": \"[\`${{ github.sha }}\`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})\", \"inline\": true},
                {\"name\": \"Database\", \"value\": \"${DB_STATUS_EMOJI} ${DB_STATUS_TEXT}\", \"inline\": true},
                {\"name\": \"Artifact\", \"value\": \"\`${ARTIFACT_URL}\`\", \"inline\": false}
              ],
              \"footer\": {\"text\": \"Ready for deployment\"},
              \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
            }],
            \"components\": [{
              \"type\": 1,
              \"components\": [
                {
                  \"type\": 2,
                  \"style\": 1,
                  \"label\": \"🚀 Deploy Now\",
                  \"url\": \"${{ github.server_url }}/${{ github.repository }}/actions/workflows/quick_deploy.yml\"
                }
              ]
            }]
          }" \
          $DISCORD_WEBHOOK | jq -r '.id // empty')

          # Create deployment trigger via GitHub API
          echo "Creating deployment trigger..."
          curl -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${{ github.api_url }}/repos/${{ github.repository }}/dispatches" \
            -d "{
              \"event_type\": \"deploy-ready\",
              \"client_payload\": {
                \"artifact_version\": \"${{ steps.version.outputs.VERSION }}\",
                \"branch\": \"${{ github.ref_name }}\",
                \"commit\": \"${{ github.sha }}\",
                \"db_changed\": \"${{ steps.db_changes.outputs.DB_CHANGED }}\",
                \"migration_files\": \"${{ steps.db_changes.outputs.MIGRATION_FILES }}\"
              }
            }"

