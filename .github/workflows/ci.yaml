name: Spring Boot CI/CD

on:
  push:
    branches:
      - master
      - develop
  release:
    types:
      - created
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Get version string
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "create" && "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/\//-/g')
            SHORT_SHA=$(git rev-parse --short=8 HEAD)
            VERSION="${SAFE_BRANCH_NAME}-${SHORT_SHA}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Rename JAR
        run: |
          JAR_FILE=$(find build/libs -type f -name "*.jar" ! -name "*-plain.jar" | head -n 1)
          mv "$JAR_FILE" "build/libs/bos-backend-${{ steps.version.outputs.VERSION }}.jar"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bos-backend-${{ steps.version.outputs.VERSION }}
          path: build/libs/bos-backend-${{ steps.version.outputs.VERSION }}.jar

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/bos-backend-${{ steps.version.outputs.VERSION }}.jar $USER@$HOST:/home/$USER/bos-backend-${{ steps.version.outputs.VERSION }}.jar
          ssh -i private_key.pem -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            pkill -f 'java -jar' || true
            nohup java -jar /home/$USER/bos-backend-${{ steps.version.outputs.VERSION }}.jar > bos-backend-${{ steps.version.outputs.VERSION }}.log 2>&1 &
          EOF
